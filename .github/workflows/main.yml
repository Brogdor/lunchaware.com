name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
env:
  IMAGE_NAME: lunchaware.com
jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Check out my other private repo
        uses: actions/checkout@master
        with:
          repository: drakeapps/docker-web
          token: ${{ secrets.CR_PAT }}

      - name: Build nginx
        run: cd ${IMAGE_NAME} && docker-compose build nginx

      - name: Tag nginx version
        run: |

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          CONTAINER_NAME=$(echo $IMAGE_NAME | sed -e 's/\.//')

          docker tag ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}/nginx ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}/nginx:$VERSION
          
      - name: Build php image
        run: cd ${IMAGE_NAME} && docker-compose build php


      - name: Tag php version
        run: |

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          CONTAINER_NAME=$(echo $IMAGE_NAME | sed -e 's/\.//')

          docker tag ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}/php ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}/php:$VERSION

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push images to GitHub Container Registry
        run: |

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          CONTAINER_NAME=$(echo $IMAGE_NAME | sed -e 's/\.//')
          
          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}/nginx:$VERSION

          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}/php:$VERSION
          
  
